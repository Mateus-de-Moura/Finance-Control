// <auto-generated />
using System;
using Finance.Control.Infra.Data.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Finance.Control.Infra.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Finance.Control.Domain.Entities.AppRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AppRole");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f39b093c-9887-4a86-bba5-48be3c1466e4"),
                            Name = "Administrator"
                        });
                });

            modelBuilder.Entity("Finance.Control.Domain.Entities.AppUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AppRoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordSalt")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AppUser");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1e8b965f-a2ec-408b-a949-9f7fb137b3c4"),
                            AppRoleId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Email = "admin@admin.com",
                            IsActive = true,
                            Name = "Admin",
                            PasswordHash = "$2a$11$5gfe82V/itxoCVt.rIBLRuvSLuUyAT5Xlc5/DzQKqREb4bNSP4fzC",
                            PasswordSalt = "$2a$11$5gfe82V/itxoCVt.rIBLRu"
                        });
                });

            modelBuilder.Entity("Finance.Control.Domain.Entities.AppUserRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AppRoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AppUserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId")
                        .IsUnique();

                    b.ToTable("Role");

                    b.HasData(
                        new
                        {
                            Id = new Guid("716edf53-63ac-499a-9579-093492b99b10"),
                            AppRoleId = new Guid("f39b093c-9887-4a86-bba5-48be3c1466e4"),
                            AppUserId = new Guid("1e8b965f-a2ec-408b-a949-9f7fb137b3c4")
                        });
                });

            modelBuilder.Entity("Finance.Control.Domain.Entities.AppUserRole", b =>
                {
                    b.HasOne("Finance.Control.Domain.Entities.AppUser", null)
                        .WithOne("UserRole")
                        .HasForeignKey("Finance.Control.Domain.Entities.AppUserRole", "AppUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Finance.Control.Domain.Entities.AppUser", b =>
                {
                    b.Navigation("UserRole");
                });
#pragma warning restore 612, 618
        }
    }
}
